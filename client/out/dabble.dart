// Auto-generated from dabble.html.
// DO NOT EDIT.

library dabble.client.dabble;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'dart:html';
import 'package:dabble/core.dart';


// Original code


void main() {
  query("#save")
    .onClick.listen((_) => save());


}

void save() {
  // For now, just print the description to the console.
  print(compileDabbleData().description);
}
String htmlInput = "";
String cssInput = "";
String jsInput = "";

DabbleData compileDabbleData() {
  String name = (query("#d-name") as InputElement).value;
  String description = (query("#d-description") as TextAreaElement).value;
  
  DabbleData data = new DabbleData(
      name,
      description,
      null,
      markupLanguageData(),
      styleLanguageData(),
      appLanguageData());
  
  return data;
}

LanguageData markupLanguageData() => new LanguageData(
      "html",
      htmlInput,
      {});

LanguageData styleLanguageData() => new LanguageData(
      "css",
      cssInput,
      {});

LanguageData appLanguageData() => new LanguageData(
      "js",
      jsInput,
      {});
// Additional generated code
void init_autogenerated() {
  var _root = autogenerated.document.body;
  var __e0, __e1, __e2;
  var __t = new autogenerated.Template(_root);
  __e0 = _root.query('#htmlinput');
  __t.listen(__e0.onInput, ($event) { htmlInput = __e0.value; });
  __t.oneWayBind(() => htmlInput, (e) { if (__e0.value != e) __e0.value = e; }, false, false);
  __e1 = _root.query('#cssinput');
  __t.listen(__e1.onInput, ($event) { cssInput = __e1.value; });
  __t.oneWayBind(() => cssInput, (e) { if (__e1.value != e) __e1.value = e; }, false, false);
  __e2 = _root.query('#jsinput');
  __t.listen(__e2.onInput, ($event) { jsInput = __e2.value; });
  __t.oneWayBind(() => jsInput, (e) { if (__e2.value != e) __e2.value = e; }, false, false);
  __t.create();
  __t.insert();
}

//@ sourceMappingURL=dabble.dart.map